// 2020-04-24T12:05:43.343-07:00 binding (GenerateBindingIndexes)
// Generated by inspiredware's Binding Toolkit â€” www.inspiredware.com

#include <napi.h>

#include "binding/hdr_histogram.h"

Napi::Object Init (Napi::Env env, Napi::Object exports) {
  exports["hdr_reset_internal_counters"] = Napi::Function::New(env, hdr_reset_internal_counters_binding, std::string("hdr_reset_internal_counters"));
  exports["hdr_init"] = Napi::Function::New(env, hdr_init_binding, std::string("hdr_init"));
  exports["hdr_close"] = Napi::Function::New(env, hdr_close_binding, std::string("hdr_close"));
  exports["hdr_reset"] = Napi::Function::New(env, hdr_reset_binding, std::string("hdr_reset"));
  exports["hdr_get_memory_size"] = Napi::Function::New(env, hdr_get_memory_size_binding, std::string("hdr_get_memory_size"));
  exports["hdr_record_value"] = Napi::Function::New(env, hdr_record_value_binding, std::string("hdr_record_value"));
  exports["hdr_record_value_atomic"] = Napi::Function::New(env, hdr_record_value_atomic_binding, std::string("hdr_record_value_atomic"));
  exports["hdr_record_values"] = Napi::Function::New(env, hdr_record_values_binding, std::string("hdr_record_values"));
  exports["hdr_record_values_atomic"] = Napi::Function::New(env, hdr_record_values_atomic_binding, std::string("hdr_record_values_atomic"));
  exports["hdr_record_corrected_value"] = Napi::Function::New(env, hdr_record_corrected_value_binding, std::string("hdr_record_corrected_value"));
  exports["hdr_record_corrected_value_atomic"] = Napi::Function::New(env, hdr_record_corrected_value_atomic_binding, std::string("hdr_record_corrected_value_atomic"));
  exports["hdr_record_corrected_values"] = Napi::Function::New(env, hdr_record_corrected_values_binding, std::string("hdr_record_corrected_values"));
  exports["hdr_record_corrected_values_atomic"] = Napi::Function::New(env, hdr_record_corrected_values_atomic_binding, std::string("hdr_record_corrected_values_atomic"));
  exports["hdr_add"] = Napi::Function::New(env, hdr_add_binding, std::string("hdr_add"));
  exports["hdr_max"] = Napi::Function::New(env, hdr_max_binding, std::string("hdr_max"));
  exports["hdr_min"] = Napi::Function::New(env, hdr_min_binding, std::string("hdr_min"));
  exports["hdr_value_at_percentile"] = Napi::Function::New(env, hdr_value_at_percentile_binding, std::string("hdr_value_at_percentile"));
  exports["hdr_mean"] = Napi::Function::New(env, hdr_mean_binding, std::string("hdr_mean"));
  exports["hdr_stddev"] = Napi::Function::New(env, hdr_stddev_binding, std::string("hdr_stddev"));
  exports["hdr_values_are_equivalent"] = Napi::Function::New(env, hdr_values_are_equivalent_binding, std::string("hdr_values_are_equivalent"));
  exports["hdr_lowest_equivalent_value"] = Napi::Function::New(env, hdr_lowest_equivalent_value_binding, std::string("hdr_lowest_equivalent_value"));
  exports["hdr_count_at_value"] = Napi::Function::New(env, hdr_count_at_value_binding, std::string("hdr_count_at_value"));
  exports["hdr_iter_init"] = Napi::Function::New(env, hdr_iter_init_binding, std::string("hdr_iter_init"));
  exports["hdr_iter_next"] = Napi::Function::New(env, hdr_iter_next_binding, std::string("hdr_iter_next"));
  exports["hdr_iter_percentile_init"] = Napi::Function::New(env, hdr_iter_percentile_init_binding, std::string("hdr_iter_percentile_init"));
  exports["hdr_iter_recorded_init"] = Napi::Function::New(env, hdr_iter_recorded_init_binding, std::string("hdr_iter_recorded_init"));
  exports["hdr_iter_linear_init"] = Napi::Function::New(env, hdr_iter_linear_init_binding, std::string("hdr_iter_linear_init"));
  return exports;
}

NODE_API_MODULE(addon, Init)